train <- read.csv("~/datasets/titanic/hw1_data.csv")
View(train)
names(train)
#first 4 line
head(train) 

# last 4 line
tail(train)

# Number of observations
nrow(train)    

# Find the value of ozone in the 47th row
train[47,1]   
or
readLines("~/datasets/titanic/hw1_data.csv" , n = 47)


# n <- nrow(train)
 print(train[(n  -6 +1):n, ])


#missing dataset
# miss<- is.na(train[, "Ozone"])  
# sum(miss)
sum(is.na(train[,1]))                          


# Find mean of Ozone column excluding missing values
 mean(train[, "Ozone"],na.rm = TRUE)
 mean(na.omit(data[,1]))   
 
#max value
sub = subset(train, Month == 5 & !is.na(Ozone) , select = Ozone)
apply(sub, 2, max)

# What is the mean of "Temp" when "Month" is equal to 6?
hw1=read.csv("~/datasets/titanic/hw1_data.csv")
sub = subset(hw1, Month == 6, select = Temp)
apply(sub, 2, mean)

#Extract the subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90.
solar <- subset(train, Temp>90 & Ozone>31, select=Solar.R)
apply(solar, 2, mean)

 #If I have two vectors x <- c(1,3, 5) and y <- c(3, 2, 10), what is produced by the expression cbind(x, y)?
 x <- c(1,3, 5)
 y <- c(3, 2, 10)
 cbind(x, y)

 #Suppose I have a vector x <- c(17, 14, 4, 5, 13, 12, 10) and I want to set all elements of this vector that are greater than 10 to be equal to 4. What R code achieves this? Select all that apply.
x <- c(3, 5, 1, 10, 12, 6)
 x[x<6]<-0
 x
 
 #Extract the subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90. What is the mean of Solar.R in this subset?
 hw1 = read.csv('hw1_data.csv')
 sub = train(hw1, Ozone > 31 & Temp > 90, select = Solar.R)
 apply(sub, 2, mean)
